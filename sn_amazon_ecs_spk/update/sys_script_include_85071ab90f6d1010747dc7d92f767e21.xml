<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>sn_amazon_ecs_spk.RequestAuthAmazonS4SignatureECS</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>RequestAuthAmazonS4SignatureECS</name>
        <script><![CDATA[var RequestAuthAmazonS4SignatureECS = Class.create();
RequestAuthAmazonS4SignatureECS.prototype = {
    initialize: function() {},
    custom: function(authAPI) {
        var requestData = authAPI.getHttpRequestData();
        var session = gs.getSession();
        var clientData = session.getClientData('SN_AMAZON_ECS_FILTER');
		gs.info("CLIENT DATA" + clientData);
        var region = session.getClientData('SN_AMAZON_ECS_REGION');
        if (clientData) {
            clientData = clientData.split("&");
            for (var key in clientData) {
                var queryParam = clientData[key].split("=");
                requestData.addQueryParam(queryParam[0], queryParam[
                    1]);
            }
        }
        requestData.setService('ecs');
        requestData.setRegion(region);
        requestData.setDirective("QUERY");
    },
    generateAuth: function(authAPI) {
        this.custom(authAPI);
        var httpRequestAuthedData = authAPI.generateAuth();
        var session = gs.getSession();
        var clientData = session.getClientData('SN_AMAZON_ECS_FILTER');
				gs.info("CLIENT DATA" + clientData);

        if (clientData) {
            clientData = clientData.split("&");
            for (var key in clientData) {
                var queryParam = clientData[key].split("=");
                httpRequestAuthedData.addQueryParam(queryParam[0],
                    queryParam[1]);
            }
        }
        return httpRequestAuthedData;
    },
    type: 'RequestAuthAmazonS4SignatureECS'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-06-22 18:13:57</sys_created_on>
        <sys_id>85071ab90f6d1010747dc7d92f767e21</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>RequestAuthAmazonS4SignatureECS</sys_name>
        <sys_package display_value="Amazon Elastic Container Service Spoke" source="sn_amazon_ecs_spk">9465375c0fa91010747dc7d92f767ed4</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Amazon Elastic Container Service Spoke">9465375c0fa91010747dc7d92f767ed4</sys_scope>
        <sys_update_name>sys_script_include_85071ab90f6d1010747dc7d92f767e21</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-06-23 03:27:06</sys_updated_on>
    </sys_script_include>
</record_update>
